application:
  version: v1.0.0

server:
  port: 8110 # 服务端口

spring:
  application:
    name: service-edu # 服务名
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db_onlineedu_edu?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
    username: root
    password: root

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #nacos服务地址

#打印sql日志  可以在控制台查看sql语句的日志
mybatis:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    banner: off #关闭mybatis_plus的启动图标
  mapper-locations: classpath*:com/zty/onlineedu/**/mapper/maps/*.xml,classpath*:com/zty/onlineedu/**/mapper/*/*.xml #配置mapper xml文件的路径

# 控制日志输出自定义，并且MyBatis日志关闭查询结果输出保留SQL输出
logging:
  config: classpath:logback-custom.xml
  level:
    com.zty: debug
    org.springframework: error
    com.baomidou: debug
    org.springframework.jdbc.datasource.init: debug
    springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator: warn
    org.apache.ibatis: debug
    java.sql: debug
    org.apache.tomcat.util.scan.StandardJarScanner: error #扫描包只输出error日志
  #使用 logging.file.path= 文件名  //直接在跟目录下创建该文件且自动 帮你创建好 spring.log 文件
  file:
    path: springbootLogs


#nacos是自带Ribbon的。Spring Cloud Ribbon是一个基于HTTP和TCP的客户端负载均衡工具，
#它基于Netflix Ribbon实现。通过Spring Cloud的封装，
#可以让我们轻松地将面向服务的REST模版请求自动转换成客户端负载均衡的服务调用。
#nacos封装好的负载均衡默认是轮询策略，（你一次我一次）
#service-file:  #这里是服务提供方的名称
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #设置为随机策略
