<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zty.onlineedu.edu.mapper.EduCourseMapper">

    <resultMap id="BaseResultMap" type="com.zty.onlineedu.edu.pojo.entity.EduCourse">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="teacherId" column="teacher_id" jdbcType="VARCHAR"/>
            <result property="subjectId" column="subject_id" jdbcType="VARCHAR"/>
            <result property="subjectParentId" column="subject_parent_id" jdbcType="VARCHAR"/>
            <result property="title" column="title" jdbcType="VARCHAR"/>
            <result property="price" column="price" jdbcType="VARCHAR"/>
            <result property="lessonNum" column="lesson_num" jdbcType="VARCHAR"/>
            <result property="cover" column="cover" jdbcType="VARCHAR"/>
            <result property="buyCount" column="buy_count" jdbcType="VARCHAR"/>
            <result property="viewCount" column="view_count" jdbcType="VARCHAR"/>
            <result property="version" column="version" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="VARCHAR"/>
            <result property="gmtCreate" column="gmt_create" jdbcType="VARCHAR"/>
            <result property="gmtModified" column="gmt_modified" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,teacher_id,subject_id,
        subject_parent_id,title,price,
        lesson_num,cover,buy_count,
        view_count,version,status,
        gmt_create,gmt_modified
    </sql>

    <sql id="Course_Description_List">
        id,description,gmt_create,gmt_modified
    </sql>
    <insert id="saveCourse">
        insert into edu_course (<include refid="Base_Column_List" />)
        values (#{id},#{teacherId},#{subjectId},#{subjectParentId},#{title},#{price},#{lessonNum},#{cover},#{buyCount},#{viewCount},#{version},#{status},
                #{gmtCreate},#{gmtModified})

    </insert>
    <insert id="saveFileInfoRelation">
        INSERT INTO edu_file_info_relation(DATAKEY,FILE_INDIRECT_ID,
                                           FILE_DIRECT_ID,
                                           FILE_TYPE,
                                           FILE_ID,
                                           FILE_NAME,
                                           FILE_VERSION,
                                           CREATE_UID,
                                           CREATE_UNAME,
                                           CREATE_TIME,
                                           YEAR,
                                           PROVINCE) values (#{datakey},#{fileIndirectId},#{fileDirectId},#{fileType},#{fileId},#{fileName},#{fileVersion},#{createUid},#{createUname},#{createTime},#{year},#{province})

    </insert>
    <update id="saveCourseDescription">
        insert into edu_course_description (<include refid="Course_Description_List"/>)
        values (#{id},#{description},#{gmtCreate},#{gmtModified})
    </update>
    <update id="updateCourse">
        update edu_course set teacher_id=#{teacherId},subject_id=#{subjectId},subject_parent_id=#{subjectParentId},title=#{title},price=#{price},
                              lesson_num=#{lessonNum},cover=#{cover},buy_count=#{buyCount},view_count=#{viewCount},version=#{version},status=#{status},
                            gmt_modified=#{gmtModified} where id=#{id}

    </update>
    <update id="updateCourseDescription">
        update edu_course_description set description=#{description},gmt_modified=#{gmtModified} where id=#{id}
    </update>
    <update id="updateCourseStatus">
        update edu_course set status="Normal" where id=#{courseId}
    </update>
    <delete id="deleteFileRelation">
        delete from edu_file_info_relation where FILE_INDIRECT_ID=#{courseId}
    </delete>
    <delete id="deleteCourseById">
        delete from edu_course where id=#{courseId}
    </delete>
    <delete id="deleteCourseDescriptionById">
        delete from edu_course_description where id=#{courseId}
    </delete>

    <delete id="deleteChapterByIds">
        delete from edu_chapter where id in
        <foreach collection="chapterIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>

    </delete>
    <delete id="deleteVideoByIds">
        delete from edu_video
        <where>
            <if test="videoMapLists!=null and videoMapLists.size()>0">
                and id in
                <foreach collection="videoMapLists" item="videoMap" separator="," open="(" close=")">
                    #{videoMap.id}
                </foreach>
            </if>
        </where>
    </delete>
    <select id="querySubjectById" resultType="String">
        select title from edu_subject where id=#{id}
    </select>
    <select id="getCourseInfo" resultMap="BaseResultMap">
        select * from edu_course where id=#{id}
    </select>
    <select id="getCourseDescription" resultType="com.zty.onlineedu.edu.pojo.entity.EduCourseDescription">
        select * from edu_course_description where id=#{id}
    </select>
    <select id="courseList" resultType="com.zty.onlineedu.edu.pojo.vo.CourseVo">
        SELECT
        c.id,
        c.title,
        s2.title as subjectParentTitle,
        s1.title as subjectTitle,
        t.name as teacherName,
        c.lesson_num as lessonNum,
        c.price,
        c.cover,
        c.buy_count as buyCount,
        c.view_count as viewCount,
        c.status,
        c.gmt_create as gmtCreate
        FROM
        edu_course c
        LEFT JOIN edu_teacher t ON t.id = c.teacher_id
        LEFT JOIN edu_subject s1 ON s1.id = c.subject_id
        LEFT JOIN edu_subject s2 ON s2.id = c.subject_parent_id
        <where>
            <if test="title!=null and title !=''">
                and c.title like CONCAT('%',#{title},'%')
            </if>
            <if test="teacherId!=null and teacherId!=''">
                and t.id=#{teacherId}
            </if>
            <if test="subjectParentId!=null and subjectParentId!=''">
                and c.subject_parent_id=#{subjectParentId}
            </if>
            <if test="subjectId!=null and subjectId!=''">
                and c.subject_id=#{subjectId}
            </if>
        </where>
    </select>
    <select id="queryFileRelationNum" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM edu_file_info_relation WHERE FILE_INDIRECT_ID=#{courseId} LIMIT 1
    </select>
    <select id="queryFileRelationFileId" resultType="java.lang.String">
        select FILE_ID from edu_file_info_relation where FILE_INDIRECT_ID=#{courseId}
    </select>
    <select id="getCoursePublishById" resultType="com.zty.onlineedu.edu.pojo.vo.CoursePublishVo">
        SELECT
        c.id,
        c.title,
        s2.title as subjectParentTitle,
        s1.title as subjectTitle,
        t.name as teacherName,
        c.lesson_num as lessonNum,
        c.price,
        c.cover
        FROM
        edu_course c
        LEFT JOIN edu_teacher t ON t.id = c.teacher_id
        LEFT JOIN edu_subject s1 ON s1.id = c.subject_id
        LEFT JOIN edu_subject s2 ON s2.id = c.subject_parent_id
        where c.id=#{courseId}

    </select>
    <select id="queryChapterIds" resultType="java.lang.String">
        select id from edu_chapter where course_id=#{courseId}
    </select>
    <select id="queryVideoInfoIdByChapterId" resultType="Map">
        select id,video_source_id as videoInfoId from edu_video 
        <where>
            <if test="chapterIds!=null and chapterIds.length>0">
                and chapter_id in
                <foreach collection="chapterIds" item="chapterId" separator="," open="(" close=")">
                   #{chapterId}
                </foreach>
            </if>

            <if test="courseId!=null and courseId!=''">
                and course_id =#{courseId}
            </if>

        </where>
    </select>
    <select id="getCourseList" resultType="com.zty.onlineedu.edu.pojo.vo.CourseVo" parameterType="com.zty.onlineedu.edu.pojo.query.WebCourseQueryParam">
        select
        id,
        title,
        lesson_num as lessonNum,
        price,
        cover,
        buy_count as buyCount,
        view_count as viewCount,
        status,
        gmt_create as gmtCreate
        from edu_course
        <where>
            <if test="subjectParentId!=null and subjectParentId!=''">
                and subject_parent_id=#{subjectParentId}
            </if>
            <if test="subjectId!=null and subjectId!=''">
                and subject_id=#{subjectId}
            </if>
        </where>
        <choose>
            <when test="buyCountSort!=null and buyCountSort!=''">
                ORDER BY buy_count
                <if test='buyCountSort=="1"'>
                    DESC
                </if>
                <if test='buyCountSort=="0"'>
                    ASC
                </if>
            </when>
            <when test="gmtCreateSort!=null and gmtCreateSort!=''">
                ORDER BY gmt_create DESC
            </when>
            <when test="priceSort!=null and priceSort!=''">
                ORDER BY price
                <if test='priceSort == "1"'>
                    DESC
                </if>
                <if test='priceSort == "0"'>
                    ASC
                </if>
            </when>
        </choose>
    </select>
</mapper>
