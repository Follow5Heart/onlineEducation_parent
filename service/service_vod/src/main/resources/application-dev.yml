application:
  version: v1.0.0

server:
  port: 8130 # 服务端口

spring:
  application:
    name: service-vod # 服务名
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db_onlineedu_edu?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
    username: root
    password: root

  servlet:
    multipart:
      max-file-size: 100MB #单个文件最大限制
      max-request-size: 200MB #多个文件最大限制

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #nacos服务地址
    sentinel:
      transport:
        #port: 8721 #端口配置会在应用对应的机器上启动一个 Http Server，该 Server 会与 Sentinel 控制台做交互。比如 Sentinel 控制台添加了一个限流规则，会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中。
        dashboard: localhost:8040  #sentinel服务地址

  #Redis相关配置
  redis:
    host: localhost
    port: 6379
    password: ztyroot
    database: 0 #操作的是0号数据库
    # lettuce简单配置
    lettuce:
      pool:
        # 最大活跃链接数 默认8
        max-active: 100
        # 最大空闲连接数 默认8
        max-idle: 10
        # 最小空闲连接数 默认0
        min-idle: 0

#打印sql日志  可以在控制台查看sql语句的日志
mybatis:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    banner: off #关闭mybatis_plus的启动图标
  mapper-locations: classpath*:com/zty/onlineedu/**/mapper/maps/*.xml,classpath*:com/zty/onlineedu/**/mapper/*/*.xml #配置mapper xml文件的路径

# 控制日志输出自定义，并且MyBatis日志关闭查询结果输出保留SQL输出
logging:
  config: classpath:logback-custom.xml
  level:
    com.zty: debug
    org.springframework: error
    com.baomidou: debug
    org.springframework.jdbc.datasource.init: debug
    springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator: warn
    org.apache.ibatis: debug
    java.sql: debug
    org.apache.tomcat.util.scan.StandardJarScanner: error #扫描包只输出error日志
  #使用 logging.file.path= 文件名  //直接在跟目录下创建该文件且自动 帮你创建好 spring.log 文件
  file:
    path: springbootLogs


#自己的文件存储位置
vod:
  myVodPath: F:/zty_project/uploadfiles/videoFile
  chunkPath: F:/zty_project/uploadfiles/chunkFile